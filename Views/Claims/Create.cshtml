@model DSD603_BikeShopDB.Models.ClaimsCreateViewModel
@{
    ViewData["Title"] = "Claims Management";
}
<!-- Page Header with navigation breadcrumb -->
<div class="container-fluid mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-controller="Claims" asp-action="Index">Claims Management</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Manage Claims</li>
        </ol>
    </nav>
    <!-- Display status message if present -->
    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {

        var alertClass = Model.StatusMessage.StartsWith("Success") ? "alert-success" :
        Model.StatusMessage.StartsWith("Warning") ? "alert-warning" : "alert-danger";
        var iconClass = Model.StatusMessage.StartsWith("Success") ? "bi-check-circle" :
        Model.StatusMessage.StartsWith("Warning") ? "bi-exclamation-triangle" : "bi-xcircle";

        <div class="alert @alertClass alert-dismissible fade show" role="alert">
            <i class="bi @iconClass"></i> @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <!-- Page Title with Statistics -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>
            <i class="bi bi-shield-check"></i> Claims Management
        </h2>
        <div class="text-muted">
            <small>
                <i class="bi bi-info-circle"></i>
                @Model.TotalClaimTypes types | @Model.TotalClaims total claims | @Model.UsersWithClaims users with claims
            </small>
        </div>
    </div>

    <div class="row">
        <!-- Create New Claim Form -->
        <div class="col-lg-4">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-plus-circle"></i> Create New Claim
                    </h5>
                </div>
                <div class="card-body">
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"
                             role="alert"></div>

                        <!-- User selection -->
                        <div class="form-group mb-3" id="userSelection">
                            <label asp-for="SelectedUserName" class="form-label">
                                <i class="bi bi-person"></i> @Html.DisplayNameFor(m => m.SelectedUserName)
                            </label>
                            <select asp-for="SelectedUserName" asp-items="Model.Users" class="form-select">
                                <option value="">-- Select a user --</option>
                            </select>
                            <span asp-validation-for="SelectedUserName" class="text-danger"></span>
                        </div>
                        <!-- Claim type -->
                        <div class="form-group mb-3">
                            <label asp-for="ClaimType" class="form-label">
                                <i class="bi bi-tag"></i> @Html.DisplayNameFor(m => m.ClaimType)
                            </label>
                            <input asp-for="ClaimType" class="form-control" placeholder="e.g., Department, Permission" list="claimTypesList" />
                            <datalist id="claimTypesList">
                                @foreach (var claimGroup in Model.ClaimTypeGroups)
                                {
                                    <option value="@claimGroup.ClaimType">
                                        @claimGroup.ClaimType
                                        (@claimGroup.UsageCount uses)
                                    </option>
                                }
                            </datalist>
                            <span asp-validation-for="ClaimType" class="text-danger"></span>
                        </div>
                        <!-- Claim value -->
                        <div class="form-group mb-3">
                            <label asp-for="ClaimValue" class="form-label">
                                <i class="bi bi-input-cursor-text"></i> @Html.DisplayNameFor(m =>
                                                                m.ClaimValue)
                            </label>
                            <input asp-for="ClaimValue" class="form-control" placeholder="e.g., HR, CanEdit" list="claimValuesList" />
                            <datalist id="claimValuesList">
                                @foreach (var claimGroup in Model.ClaimTypeGroups)
                                {
                                    @foreach (var value in claimGroup.Values)
                                    {
                                        <option value="@value">@claimGroup.ClaimType: @value</option>
                                    }
                                }
                            </datalist>
                            <span asp-validation-for="ClaimValue" class="text-danger"></span>
                        </div>
                        <!-- Submit buttons -->
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-circle"></i> Create Claim
                            </button>
                            <a asp-controller="Claims" asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Index
                            </a>
                        </div>
                    </form>
                </div>
            </div>
            <!-- Quick Reference -->
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0"><i class="bi bi-lightbulb"></i> Quick Reference</h6>
                </div>
                <div class="card-body">
                    <h6>Common Claim Types:</h6>
                    @if (Model.ClaimTypeGroups.Any())
                    {
                        <div class="claim-types-reference">
                            @foreach (var group in Model.ClaimTypeGroups.Take(5))
                            {
                                <div class="mb-2">
                                    <strong>@group.ClaimType:</strong><br>
                                    <small class="text-muted">
                                        @string.Join(", ",
                                        group.Values.Take(3))@(group.Values.Count > 3 ? "..." : "")
                            </small>
                        </div>
                                                }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted small">No existing claim types found.</p>
                    }
                </div>
            </div>
        </div>
        <!-- Existing Claims List -->
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-itemscenter">
                    <h5 class="mb-0">
                        <i class="bi bi-list-ul"></i> All Claims in Database
                    </h5>
                    <div>
                        <button class="btn btn-sm btn-outline-light" type="button" data-bstoggle="collapse" data-bs-target="#filtersCollapse">
                            <i class="bi bi-funnel"></i> Filters
                        </button>
                    </div>
                </div>
                <!-- Filters Section -->
                <div class="collapse" id="filtersCollapse">
                    <div class="card-body border-bottom">
                        <div class="row">
                            <div class="col-md-4">
                                <input type="text" id="searchUser" class="form-control form-control-sm"
                                       placeholder="Search by user...">
                            </div>
                            <div class="col-md-4">
                                <select id="filterClaimType" class="form-select form-select-sm">
                                    <option value="">All Claim Types</option>
                                    @foreach (var group in Model.ClaimTypeGroups)
                                    {
                                        <option value="@group.ClaimType">@group.ClaimType</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-sm btn-secondary" onclick="clearFilters()">
                                    <i class="bi bi-x-circle"></i> Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model.AllUserClaims.Any())
                    {
                        <div class="table-responsive" style="max-height: 600px;">
                            <table class="table table-hover mb-0" id="claimsTable">
                                <thead class="table-dark sticky-top">
                                    <tr>
                                        <th>User</th>
                                        <th>Claim Type</th>
                                        <th>Claim Value</th>
                                        <th width="150">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var userClaim in Model.AllUserClaims.OrderBy(uc =>
                                                                    uc.UserName).ThenBy(uc => uc.ClaimType))
                                    {
                                        <tr class="claim-row"
                                            data-user="@userClaim.UserName.ToLower()"
                                            data-claim-type="@userClaim.ClaimType"
                                            data-claim-value="@userClaim.ClaimValue">
                                            <td>
                                                <div>
                                                    <i class="bi bi-person"></i>
                                                    <strong>@userClaim.UserName</strong>
                                                </div>
                                                <small class="text-muted">@userClaim.Email</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-info textdark">@userClaim.ClaimType</span>
                                            </td>
                                            <td>
                                                <span class="text-primary">@userClaim.ClaimValue</span>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm">
                                                    <button class="btn btn-outline-warning btn-sm"
                                                            onclick="editClaim('@userClaim.UserId', '@userClaim.ClaimType', '@userClaim.ClaimValue', '@userClaim.UserName')"
                                                            title="Edit Claim">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger btn-sm"
                                                            onclick="deleteClaim('@userClaim.UserId',  '@userClaim.ClaimType', '@userClaim.ClaimValue', '@userClaim.UserName')"
                                                            title="Delete Claim">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-inbox display-1 text-muted"></i>
                            <h4 class="text-muted">No Claims Found</h4>
                            <p class="text-muted">Create your first claim using the form on the left.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Edit Claim Modal -->
<div class="modal fade" id="editClaimModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="bi bi-pencil"></i> Edit Claim</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editClaimForm" method="post" asp-page-handler="UpdateClaim">
                <div class="modal-body">
                    <input type="hidden" name="userId" id="editUserId">
                    <input type="hidden" name="oldClaimType" id="editOldClaimType">
                    <input type="hidden" name="oldClaimValue" id="editOldClaimValue">
                    <div class="mb-3">
                        <label class="form-label">User</label>
                        <input type="text" class="form-control" id="editUserName" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="editNewClaimType" class="form-label">Claim Type</label>
                        <input type="text" class="form-control" name="newClaimType" id="editNewClaimType"
                               required>
                    </div>
                    <div class="mb-3">
                        <label for="editNewClaimValue" class="form-label">Claim Value</label>
                        <input type="text" class="form-control" name="newClaimValue"
                               id="editNewClaimValue">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bsdismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-check-circle"></i> Update Claim
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Delete Claim Modal -->
<div class="modal fade" id="deleteClaimModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="bi bi-exclamation-triangle"></i> Delete Claim</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="deleteClaimForm" method="post" asp-page-handler="DeleteClaim">
                <div class="modal-body">
                    <input type="hidden" name="userId" id="deleteUserId">
                    <input type="hidden" name="claimType" id="deleteClaimType">
                    <input type="hidden" name="claimValue" id="deleteClaimValue">
                    <p>Are you sure you want to delete this claim?</p>
                    <div class="alert alert-warning">
                        <strong>User:</strong> <span id="deleteUserName"></span><br>
                        <strong>Claim Type:</strong> <span id="deleteClaimTypeDisplay"></span><br>
                        <strong>Claim Value:</strong> <span id="deleteClaimValueDisplay"></span>
                    </div>
                    <p class="text-danger">
                        <i class="bi bi-exclamation-triangle"></i> This action cannot
                        be undone.
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bsdismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i> Delete Claim
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
         document.addEventListener('DOMContentLoaded', function () {
         // Toggle user selection based on checkbox
         const createWithoutAssignmentCheckbox = document.getElementById('createWithoutAssignment');
         const userSelection = document.getElementById('userSelection');
         const userSelect = document.getElementById('SelectedUserId');
         function toggleUserSelection() {
         if (createWithoutAssignmentCheckbox.checked) {
         userSelection.style.opacity = '0.5';
         userSelect.disabled = true;
         userSelect.required = false;
         } else {
         userSelection.style.opacity = '1';
         userSelect.disabled = false;
         userSelect.required = true;
         }
         }
         toggleUserSelection();
         createWithoutAssignmentCheckbox.addEventListener('change', toggleUserSelection);
         // Auto-dismiss success alerts
         const successAlert = document.querySelector('.alert-success');
         if (successAlert) {
         setTimeout(() => {
         const bsAlert = new bootstrap.Alert(successAlert);
         bsAlert.close();
         }, 5000);
         }
         // Initialize filters
         initializeFilters();
         });
         // Filter functionality
         function initializeFilters() {
         const searchUser = document.getElementById('searchUser');
         const filterClaimType = document.getElementById('filterClaimType');
         const rows = document.querySelectorAll('.claim-row');
         function applyFilters() {
         const userSearch = searchUser.value.toLowerCase();
         const claimTypeFilter = filterClaimType.value;
         rows.forEach(row => {
         const userName = row.dataset.user;
         const claimType = row.dataset.claimType;
         const matchesUser = !userSearch || userName.includes(userSearch);
         const matchesClaimType = !claimTypeFilter || claimType === claimTypeFilter;
         row.style.display = matchesUser && matchesClaimType ? '' : 'none';
         });
         }
         searchUser.addEventListener('input', applyFilters);
         filterClaimType.addEventListener('change', applyFilters);
         }
         function clearFilters() {
         document.getElementById('searchUser').value = '';
         document.getElementById('filterClaimType').value = '';
         document.querySelectorAll('.claim-row').forEach(row => {
         row.style.display = '';
         });
         }
         // Edit claim functionality
         function editClaim(userId, claimType, claimValue, userName) {
         document.getElementById('editUserId').value = userId;
         document.getElementById('editOldClaimType').value = claimType;
         document.getElementById('editOldClaimValue').value = claimValue;
         document.getElementById('editUserName').value = userName;
         document.getElementById('editNewClaimType').value = claimType;
         document.getElementById('editNewClaimValue').value = claimValue;
         const modal = new bootstrap.Modal(document.getElementById('editClaimModal'));
         modal.show();
         }
         // Delete claim functionality
         function deleteClaim(userId, claimType, claimValue, userName) {
         document.getElementById('deleteUserId').value = userId;
         document.getElementById('deleteClaimType').value = claimType;
         document.getElementById('deleteClaimValue').value = claimValue;
         document.getElementById('deleteUserName').textContent = userName;
         document.getElementById('deleteClaimTypeDisplay').textContent = claimType;
         document.getElementById('deleteClaimValueDisplay').textContent = claimValue;
         const modal = new bootstrap.Modal(document.getElementById('deleteClaimModal'));
         modal.show();
         }
    </script>
    <style>
        .claim-types-reference {
            max-height: 200px;
            overflow-y: auto;
        }

        .table-responsive {
            border-radius: 0.375rem;
        }

        .claim-row:hover {
            background-color: #f8f9fa;
        }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }
    </style>
}